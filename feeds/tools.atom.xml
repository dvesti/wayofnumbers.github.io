<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Way of Numbers</title><link href="https://wayofnumbers.github.io/" rel="alternate"></link><link href="https://wayofnumbers.github.io/feeds/tools.atom.xml" rel="self"></link><id>https://wayofnumbers.github.io/</id><updated>2018-02-24T20:00:00-06:00</updated><entry><title>Tweaking Pelican Elegant Theme</title><link href="https://wayofnumbers.github.io/Tweak-Pelican-Elegant-Theme.html" rel="alternate"></link><published>2018-02-24T20:00:00-06:00</published><updated>2018-02-24T20:00:00-06:00</updated><author><name>Michael Li</name></author><id>tag:wayofnumbers.github.io,2018-02-24:Tweak-Pelican-Elegant-Theme.html</id><summary type="html">
&lt;p&gt;&lt;img alt="Elegant" src="https://wayofnumbers.github.io/images/Elegant.png"/&gt;&lt;/p&gt;
&lt;p&gt;Pelican has a lot of themes, developed by the community and shared on its official GitHub repo &lt;a href="https://github.com/getpelican/pelican-themes"&gt;here&lt;/a&gt;. &lt;a href="http://www.pelicanthemes.com/"&gt;Pelican Themes&lt;/a&gt; also offer some previews of them so you can have a good idea of what to expect. 
Some themes are really easy to setup and configure, others need some efforts. The &lt;a href="http://oncrashreboot.com/elegant-best-pelican-theme-features"&gt;Elegant&lt;/a&gt; them is the latter. For most of the themes, to make it work, you just need to add define the ‘&lt;span class="caps"&gt;THEME&lt;/span&gt;’ variable, like so:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="s1"&gt;'THEME'&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'theme/themename'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For Elegant, it’s way more than that, and it’s a good thing. Elegant packed a lot of great features and thorough considerations to the reader. And that’s why I choose it as the theme for my site. Good things come with a price they say. So let’s find out. &lt;/p&gt;
&lt;h2 id="search"&gt;&lt;a class="toclink" href="#search"&gt;Search&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Search is useful when you have a lot of articles. All serious blog need to have it. To use it, add ‘tipue_search’ and ‘sitemap’ to your plugins and it will automatically be enabled. &lt;/p&gt;
&lt;h2 id="about-me-and-my-project"&gt;&lt;a class="toclink" href="#about-me-and-my-project"&gt;About Me and My Project&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Elegant’s home page layout put the blogger himself front and center with ‘About Me’ and the ‘My Project’ at the top, followed with ‘Recent Posts’. To use them, you need to set the ‘LANDING_PAGE_ABOUT’ and ‘&lt;span class="caps"&gt;PROJECTS&lt;/span&gt;’ variables in the &lt;code&gt;pelicanconf.py&lt;/code&gt;. &lt;/p&gt;
&lt;h2 id="jquery-issue"&gt;&lt;a class="toclink" href="#jquery-issue"&gt;jQuery Issue&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I’ve enabled all the nice features, like search, collasible comments, collasible comments. But they all won’t work on Chrome because it’s considered ‘unsafe scripts’. After some digging, it turns out the site is using &lt;span class="caps"&gt;HTTPS&lt;/span&gt;, while the original theme’s template uses &lt;span class="caps"&gt;HTTP&lt;/span&gt; to load the jQuery that did all these nice features. Once I replaced the &lt;span class="caps"&gt;HTTP&lt;/span&gt; with its &lt;span class="caps"&gt;HTTPS&lt;/span&gt; counterpart, everything works like a charm. &lt;/p&gt;
&lt;h2 id="table-of-contents"&gt;&lt;a class="toclink" href="#table-of-contents"&gt;Table of Contents&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Took me some time to get table of contents to work. Firstly ‘extract_toc’ plugin needs to be added into the ‘&lt;span class="caps"&gt;PLUGINS&lt;/span&gt;’ variable. Then ‘markdown’ Python module needs to be installed and configured for it to work as the Elegant website instructions. But after all this, it still didn’t work. Turns out, you need to add &lt;code&gt;[TOC]&lt;/code&gt; in the Markdown file, after all the meta data, to actually add the table of contents into your post. After I did that, everything works. &lt;/p&gt;
&lt;h2 id="conclusion"&gt;&lt;a class="toclink" href="#conclusion"&gt;Conclusion&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Install and tweaking a Pelican theme isn’t that hard. Look into the static folder for &lt;span class="caps"&gt;CSS&lt;/span&gt;, tweak them if you want, or add custom &lt;span class="caps"&gt;CSS&lt;/span&gt; of your own and load them in the template. Then go into the template folder to check the html files. With basic &lt;span class="caps"&gt;HTML&lt;/span&gt;/&lt;span class="caps"&gt;CSS&lt;/span&gt;/Javascripts knowledge, you already can achieve a lot on tweaking any theme of your liking. &lt;/p&gt;</summary><category term="Pelican"></category><category term="Blog"></category><category term="Github"></category><category term="Theme"></category></entry><entry><title>Setup Data Science Blog with Pelican + GitHub Pages</title><link href="https://wayofnumbers.github.io/Setup-Pelican-1.html" rel="alternate"></link><published>2018-02-14T20:00:00-06:00</published><updated>2018-02-14T20:00:00-06:00</updated><author><name>Michael Li</name></author><id>tag:wayofnumbers.github.io,2018-02-14:Setup-Pelican-1.html</id><summary type="html">
&lt;p&gt;&lt;img alt="Coding Background" src="https://wayofnumbers.github.io/images/coding.jpeg"/&gt;&lt;/p&gt;
&lt;p&gt;First of all, this is by no means a thorough tutorial. I’ve followed Dataquest’s blog post: &lt;a href="https://www.dataquest.io/blog/how-to-setup-a-data-science-blog/"&gt;Building a data science portfolio: Making a data science blog&lt;/a&gt; to get this one setup. Here are some insights and hiccups that may be helpful to others who want to do the same thing.&lt;/p&gt;
&lt;h2 id="static-sites-and-static-sites-generator"&gt;&lt;a class="toclink" href="#static-sites-and-static-sites-generator"&gt;Static sites and static sites generator&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you have never experienced the web development world, static site might be a new word to you. Actually it’s quite simple, it’s just plan web-site with &lt;span class="caps"&gt;HTML&lt;/span&gt; files, &lt;span class="caps"&gt;CSS&lt;/span&gt; sheets and Javascript files. These file never changes unless you make them, thus the word ‘static’. The ‘dynamic’ site, on the other hand, use database and complex post-end technology to ‘dynamically’ generate these &lt;span class="caps"&gt;HTML&lt;/span&gt;/&lt;span class="caps"&gt;CSS&lt;/span&gt;/Javascripts files. It’s much harder to develop and maintain. 
But I don’t want that complexity you say. I just want to write something and post them and make them look neat. Then, my friend, look no further than a static site. Good news to us, there are a lot of static sites generators out there that can help us do the heavy-lifting of developing a website. 
The static sites generators come with many flavors, &lt;a href="https://jekyllrb.com/"&gt;Jekyell(based on Ruby)&lt;/a&gt;, &lt;a href="https://blog.getpelican.com/"&gt;Pelican(based on Python&lt;/a&gt; are too popular one. Since I’m more familiar with Python. I decided to use Pelican to build my data science blog.&lt;/p&gt;
&lt;p&gt;The beautiful thing here is, since Pelican is written in Python, it’s quite easy to make it work with Jupyter Notebook, which is a huge bonus for data science. This means you can write your blog posts using Jupyter Notebook, leverage all the powerful snippets, data visualization and code executing it has and roll all those into your post, with ease.&lt;/p&gt;
&lt;h2 id="install-pelican"&gt;&lt;a class="toclink" href="#install-pelican"&gt;Install Pelican&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Usually install Pelican will be easy, but if we also want to support Jupyter Notebook it will be harder. Many python modules will need to be installed using &lt;strong&gt;pip&lt;/strong&gt;. &lt;/p&gt;
&lt;p&gt;Here is a list I used:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;Markdown&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;.6.6    &lt;span class="c1"&gt;# Markdown support&lt;/span&gt;
&lt;span class="nv"&gt;pelican&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;.6.3     &lt;span class="c1"&gt;# Pelican itself&lt;/span&gt;
jupyter&amp;gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;.0       &lt;span class="c1"&gt;# Jupyter Notebook&lt;/span&gt;
ipython&amp;gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;.0       &lt;span class="c1"&gt;# iPython&lt;/span&gt;
nbconvert&amp;gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;.0     &lt;span class="c1"&gt;#&lt;/span&gt;
beautifulsoup4     &lt;span class="c1"&gt;# not sure why we need pharsing here, maybe manipulating codes&lt;/span&gt;
ghp-import&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.4.1  &lt;span class="c1"&gt;#handle git branches&lt;/span&gt;
&lt;span class="nv"&gt;matplotlib&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;.5.1  &lt;span class="c1"&gt;#data visualization&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Once all are installed, run:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pelican-quickstart
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Answer couple of questions and the backbone of your site is up. To make the Jupyter Notebook part work, we will need this Pelican plugin (yes, Pelican support plugins!): &lt;a href="https://github.com/danielfrg/pelican-ipynb"&gt;Pelican-ipynb&lt;/a&gt;. 
Once installed, activate the plugin in your &lt;code&gt;pelicanconf.py&lt;/code&gt;. This is your dot file, and you’ll be dealig with it a lot later on. 
Add these into the bottom:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;MARKUP&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'md'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'ipynb'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;PLUGIN_PATH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'./plugins'&lt;/span&gt;
&lt;span class="n"&gt;PLUGINS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'ipynb.markup'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="write-post"&gt;&lt;a class="toclink" href="#write-post"&gt;Write Post&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Well this is the easier part. Just put your Jupyter Notebook file into the &lt;code&gt;'content'&lt;/code&gt; folder. Also, for each post, we’ll need a meta file to include some meta data of the post. The meta file should have the extension: &lt;code&gt;.ipynb-meta&lt;/code&gt;. Here is an example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;Title&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;First&lt;/span&gt; &lt;span class="n"&gt;Post&lt;/span&gt;
&lt;span class="n"&gt;Slug&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;first&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;
&lt;span class="n"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2016&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;06&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;
&lt;span class="n"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;posts&lt;/span&gt;
&lt;span class="n"&gt;Tags&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;firsts&lt;/span&gt;
&lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vik&lt;/span&gt; &lt;span class="n"&gt;Paruchuri&lt;/span&gt;
&lt;span class="n"&gt;Summary&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;My&lt;/span&gt; &lt;span class="n"&gt;first&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;read&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;find&lt;/span&gt; &lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It’s quite easy to figure out what they are so I won’t bother explain here. When done, save. &lt;/p&gt;
&lt;h2 id="generating-html"&gt;&lt;a class="toclink" href="#generating-html"&gt;Generating &lt;span class="caps"&gt;HTML&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Exit out of content folder, and run &lt;code&gt;pelican content&lt;/code&gt; to generate the &lt;span class="caps"&gt;HTML&lt;/span&gt;. Enter &lt;code&gt;output&lt;/code&gt; again and run:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;python -m pelican.server
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then visit: &lt;code&gt;localhost:8000&lt;/code&gt; to see your new site. &lt;/p&gt;
&lt;h2 id="putting-it-on-github-pages"&gt;&lt;a class="toclink" href="#putting-it-on-github-pages"&gt;Putting it on GitHub Pages&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Create a GitHub Page is simple and there are many tutorials out there. Once created, edit your &lt;code&gt;SITEURL&lt;/code&gt; in &lt;code&gt;publishconf.py&lt;/code&gt; file, make it into &lt;code&gt;https://username.github.io&lt;/code&gt;, substitute &lt;code&gt;username&lt;/code&gt; with your site name. &lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Run &lt;code&gt;pelican content -s publishconf.py&lt;/code&gt; to generate the real stuff. &lt;/p&gt;
&lt;p&gt;Run &lt;code&gt;ghp-import output -b master&lt;/code&gt; to import everything into the &lt;code&gt;output&lt;/code&gt; folder to the &lt;code&gt;master&lt;/code&gt; branch. &lt;/p&gt;
&lt;p&gt;Run &lt;code&gt;git push origin master&lt;/code&gt; to push changes to GitHub repo. &lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="themes"&gt;&lt;a class="toclink" href="#themes"&gt;Themes&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;There are a lot of &lt;a href="https://github.com/getpelican/pelican-themes"&gt;themes&lt;/a&gt; to choose from. What you need to do is to configure your &lt;code&gt;pelicanconf.py&lt;/code&gt; file and assign the theme name. Some themes may need to install extra Python modules or have access to other services to work. But overall the process is straight forward.&lt;/p&gt;
&lt;h2 id="google-analytics"&gt;&lt;a class="toclink" href="#google-analytics"&gt;Google Analytics&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Pelican have Google Analytics support out of the box. Register the site on &lt;span class="caps"&gt;GA&lt;/span&gt;, then get the &lt;code&gt;UA-XXXXxxxxx&lt;/code&gt; id, put it into the &lt;code&gt;pelicanconf.py&lt;/code&gt; file and you’re golden. &lt;/p&gt;
&lt;h2 id="disqus"&gt;&lt;a class="toclink" href="#disqus"&gt;Disqus&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Disqus support come out of the box too. Register the site on Disqus, get your &lt;strong&gt;shortname&lt;/strong&gt; correct, and put into &lt;code&gt;pelicanconf.py&lt;/code&gt; and you should be good too. Some turorial suggest put into &lt;code&gt;publishconf.py&lt;/code&gt;, well mine only works on &lt;code&gt;pelicanconf.py&lt;/code&gt; so use your own judgement. &lt;/p&gt;
&lt;h2 id="seo"&gt;&lt;a class="toclink" href="#seo"&gt;&lt;span class="caps"&gt;SEO&lt;/span&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Basic &lt;span class="caps"&gt;SEO&lt;/span&gt; can be achieved using &lt;strong&gt;sitemap&lt;/strong&gt; plugin. Search for it and put into &lt;code&gt;pelicanconf.py&lt;/code&gt;, it will work automatically.&lt;/p&gt;
&lt;h2 id="conclusion"&gt;&lt;a class="toclink" href="#conclusion"&gt;Conclusion&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Overall the process is not hard at all. Once everything is set. Just focus on putting in solid content using Jupyter Notebook. Enjoy coding, visualizing and writing!&lt;/p&gt;</summary><category term="Pelican"></category><category term="Data Science"></category><category term="Blog"></category><category term="Github"></category><category term="Jupyter Notebook"></category><category term="Disqus"></category><category term="Google Analytics"></category></entry></feed>